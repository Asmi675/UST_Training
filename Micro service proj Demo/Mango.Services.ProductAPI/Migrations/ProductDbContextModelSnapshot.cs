// <auto-generated />
using Mango.Services.ProductAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Mango.Services.ProductAPI.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    partial class ProductDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Mango.Services.ProductAPI.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageLocalPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ProductId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            ProductId = 1001,
                            CategoryName = "Stationary",
                            Description = "Blue Pen",
                            ImageLocalPath = "D:\\.net\\Pen_image.jpg",
                            ImageUrl = "https://th.bing.com/th/id/R.b3a23162bff93129ae5e2a2dc5dcccba?rik=VDbD8YO8zBTEkQ&riu=http%3a%2f%2fnatpen.scene7.com%2fis%2fimage%2fNatPenVegas%2fLNS&ehk=weqJ63x%2fGhajxjBeBcMzyfFeNWN1PBWyFGqhU6D78%2bo%3d&risl=&pid=ImgRaw&r=0",
                            Name = "Pen",
                            Price = 10.0
                        },
                        new
                        {
                            ProductId = 1002,
                            CategoryName = "Stationary",
                            Description = "C3 Pro",
                            ImageLocalPath = "D:\\.net\\Phone_image.webp",
                            ImageUrl = "https://images.thequint.com/thequint/2020-02/9e5ba4c9-6a9b-441d-80de-a02a28228182/Realme_C3_1024.webp?rect=0%2C38%2C1024%2C538&w=1200&auto=format%2Ccompress&ogImage=true",
                            Name = "Redmi Phone",
                            Price = 25000.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
